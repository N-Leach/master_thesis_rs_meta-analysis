"SDG11: Sustainable Cities" = "#FF7518",
"SDG15: Life on Land" = "#2C9F2C"
))
study_map <- world_map |>
group_by(region) |>
summarize(lat = mean(lat), long = mean(long), .groups = 'drop')|>
right_join(my_data, join_by("region"=="location"))
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
#color = "#001158",
alpha = 0.4,
size = 1.2,
width = 3,
height = 1,
show.legend = FALSE) +
SDG_colours +
theme_void()
ggsave("map.png")
ies.da |>
select(
OA_reported,
total,
globalCitationsCount,
number_classes,
fraction_majority_class,
Publication.Year,
SDG_theme,
classification_type,
model_group,
ancillary,
indices,
RS_device_type,
RS_device_group,
no_band_group,
RS_spatital_res_grouped,
Confusion_matrix
) |>
tbl_summary(
statistic = list(
all_continuous() ~ "{mean} ({min} - {max})",
all_categorical() ~ "{n} ({p}%)"
),
label = feature_labels,
digits = all_continuous() ~ 2,
missing = "no"
) |>
modify_header(label = "Feature") |>
modify_header(all_stat_cols() ~ "Statistic") |>
as_kable(
booktabs = TRUE,
longtable = TRUE,
linesep = "",
escape = TRUE
)|>
kable_styling(font_size = 9,
full_width = FALSE)|>
pack_rows("Study Features", 2, 46, latex_gap_space = "0.1em" #, hline_before = T
)|>
pack_rows("Numeric$^b$", 2, 5, latex_gap_space = "0em")|>
pack_rows("Categorical$^c$", 6,46, latex_gap_space = "0em")|>
row_spec(c(0),  bold = TRUE)|>
column_spec(1, width = "7cm")|>
column_spec(2, width = "6cm")|>
add_indent(c(7:12, 14:16, 18:20, 22:24, 26:27,
29:30, 32:35,37:40,42:44,
46:48),
level_of_indent = 1.5)|>
footnote(alphabet = c("Effect size of interest. $^a$For numeric predictors: mean (min - max) and $^b$ for categorical variables number of effect sizes (%)"),
threeparttable=TRUE, escape = FALSE)
multi_coef<- read_excel("figures/summary_tables.xlsx", sheet = "multimodel_inference_results")
View(multi_coef)
multi_inf<- readRDS("../appendix/multimodel_inference_out.rda")
View(multi_inf)
meta_reg_42 <- rma.mv(yi, vi,
data = ies.da ,
random = ~ 1 | AuthorYear / esid,
tdist = TRUE,
method = "REML",
test = "t",
dfs="contain",
mods = ~ fraction_majority_class+ancillary+ indices
)
ies.da$preds <- predict(meta_reg_42, transf = transf.ipft.hm, targ =list(ni=1/(meta_reg_42$se)^2))$pred
ggplot(ies.da, aes(x = OA_reported, y = preds))+
geom_point(size = 5, aes(colour = ancillary), alpha = 0.7)+
geom_smooth(method = "lm",formula = 'y ~ x',  se = FALSE, colour = "grey", linetype= "dashed", linewidth = 0.8)+
# y = x line
geom_textabline(label = "y = x", intercept = 0, slope = 1,hjust = 0.2,  linetype= "longdash")+
scale_colour_brewer(palette = "Dark2",
labels = c("Only Remote Sensing Data","Addition of Ancillary Data"))+
xlim(c(0.64, 1))+
ylim(c(0.64,1))+
labs(x = "Reported Overall Accuracy",
y = "Predicted Overall Accuracy",
title = "Plot of Observed Agaist Predicted Accuracy Based on the Meta-regression Model.")+
theme(legend.text = element_text(size = 8),
legend.position = "top") +
common_theme
ggsave("fig-preds.png")
ggsave("fig-preds.png", width = 5,
height = 4,
units = "cm")
ggsave("fig-preds.png", width = 15,
height = 14,
units = "cm")
ggsave("fig-preds.png", width = 10,
height = 12,
units = "cm")
ggsave("fig-preds.png", width = 12,
height = 10,
units = "cm")
ies.da$preds <- predict(meta_reg_42, transf = transf.ipft.hm, targ =list(ni=1/(meta_reg_42$se)^2))$pred
ggplot(ies.da, aes(x = OA_reported, y = preds))+
geom_point(size = 5, aes(colour = ancillary), alpha = 0.7)+
geom_smooth(method = "lm",formula = 'y ~ x',  se = FALSE, colour = "grey", linetype= "dashed", linewidth = 0.8)+
# y = x line
geom_textabline(label = "y = x", intercept = 0, slope = 1,hjust = 0.2,  linetype= "longdash")+
scale_colour_brewer(palette = "Dark2",
labels = c("Only Remote Sensing Data","Addition of Ancillary Data"))+
xlim(c(0.64, 1))+
ylim(c(0.64,1))+
labs(x = "Reported Overall Accuracy",
y = "Predicted Overall Accuracy",
title = "Plot of Observed Agaist Predicted Accuracy Based on the Meta-regression Model.")+
theme(legend.text = element_text(size = 8),
legend.position = "top") +
common_theme
ggsave("fig-preds.png", width = 14,
height = 10,
units = "cm")
ggsave("fig-preds.png", width = 15,
height = 10,
units = "cm")
study_features <- c(
# 2 levels
"ancillary","indices","Confusion_matrix",
# 3 levels
"model_group", "SDG_theme", "classification_type",
"no_band_group", "RS_device_type",
# 4 levels
"RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
ies.da$se <- sqrt(ies.da$vi)
source("../appendix/packages.R")
source("../appendix/feature_labels.R")
# final dataset, for data wrangling see appendix
my_data <- read.csv("../data/analysis_df.csv")
# weights and transformation
# Function to calculate various effect sizes and to estimate the variance
## for the traditional meta analysis
ies.da  <- escalc(xi = event , ni = total , data = my_data ,
measure = "PFT",  # FT double  arcsine  transformation
slab=paste(AuthorYear, " Estimate ", esid)
)
#the ies: individual effect size, new variables:
## yi: FTT effect sizes
## vi: calculated variances
ies.da$ancillary <- relevel(factor(ies.da$ancillary), ref = "Remote Sensing Only")
ies.da$indices <- relevel(factor(ies.da$indices), ref = "Not Used")
ies.da$se <- sqrt(ies.da$vi)
multi_inf <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
View(multi_inf)
study_features <- c(
# 2 levels
"ancillary","indices","Confusion_matrix",
# 3 levels
"model_group", "SDG_theme", "classification_type",
"no_band_group", "RS_device_type",
# 4 levels
"RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes"
)
multi_inf_out_fraction <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
View(multi_inf_out_fraction)
multi_inf_out_fraction$fitted.models
study_features <- c(
# 2 levels
"ancillary","indices","Confusion_matrix",
# 3 levels
"model_group", "SDG_theme", "classification_type",
"no_band_group", "RS_device_type",
# 4 levels
"RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_total <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
View(multi_inf_out_total)
multi_inf_out_total$fitted.models
study_features <- c(
# 2 levels
#"ancillary",
"indices","Confusion_matrix",
# 3 levels
"model_group", "SDG_theme", "classification_type",
"no_band_group", "RS_device_type",
# 4 levels
"RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_ac <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_fraction$fitted.models
multi_inf_out_total$fitted.models
multi_inf_out_ac$fitted.models
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric$fitted.models
study_features <- c(
# 2 levels
"ancillary",
# "indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
study_features <- c(
# 2 levels
"ancillary",
# "indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
study_features <- c(
# 2 levels
"ancillary",
"indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
multi_inf_out_numeric_anc$fitted.models
multi_inf_out_numeric_anc$formula
multi_inf$formula
multi_inf$fitted.models
multi_inf_out_numeric$fitted.models
multi_inf_out_numeric$formula
study_features <- c(
# 2 levels
"ancillary",
"indices",#"Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$formula
multi_inf_out_numeric_anc$fitted.models
2^7
study_features <- c(
# 2 levels
"ancillary",
# "indices",#"Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
2^6
multi_inf_out_numeric_anc$formula
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$formula
multi_inf_out_numeric_anc$fitted.models
> multi_inf_out_fraction$formula
multi_inf_out_fraction$formula
multi_inf_out_fraction$formula
multi_inf_out_total$fitted.models
multi_inf_out_total$formula
type.of(ies.da$model_group)
typeof(ies.da$model_group)
ies.da$model_group<- as.factor(ies.da$model_group)
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
typeof(ies.da$model_group)
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
unique(ies.da$model_group)
ies.da$model_group<- factor(ies.da$model_group, levels = "Tree-Based Models", "Other",             "Neural Networks")
typeof(ies.da$model_group)
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
ies.da$model_group
# weights and transformation
# Function to calculate various effect sizes and to estimate the variance
## for the traditional meta analysis
ies.da  <- escalc(xi = event , ni = total , data = my_data ,
measure = "PFT",  # FT double  arcsine  transformation
slab=paste(AuthorYear, " Estimate ", esid)
)
#the ies: individual effect size, new variables:
## yi: FTT effect sizes
## vi: calculated variances
ies.da$ancillary <- relevel(factor(ies.da$ancillary), ref = "Remote Sensing Only")
ies.da$indices <- relevel(factor(ies.da$indices), ref = "Not Used")
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
ies.da$se <- sqrt(ies.da$vi)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
