study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric$fitted.models
study_features <- c(
# 2 levels
"ancillary",
# "indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
study_features <- c(
# 2 levels
"ancillary",
# "indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
study_features <- c(
# 2 levels
"ancillary",
"indices","Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
multi_inf_out_numeric_anc$fitted.models
multi_inf_out_numeric_anc$formula
multi_inf$formula
multi_inf$fitted.models
multi_inf_out_numeric$fitted.models
multi_inf_out_numeric$formula
study_features <- c(
# 2 levels
"ancillary",
"indices",#"Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$formula
multi_inf_out_numeric_anc$fitted.models
2^7
study_features <- c(
# 2 levels
"ancillary",
# "indices",#"Confusion_matrix",
# # 3 levels
# "model_group", "SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
2^6
multi_inf_out_numeric_anc$formula
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$formula
multi_inf_out_numeric_anc$fitted.models
> multi_inf_out_fraction$formula
multi_inf_out_fraction$formula
multi_inf_out_fraction$formula
multi_inf_out_total$fitted.models
multi_inf_out_total$formula
type.of(ies.da$model_group)
typeof(ies.da$model_group)
ies.da$model_group<- as.factor(ies.da$model_group)
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
typeof(ies.da$model_group)
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
multi_inf_out_numeric_anc$fitted.models
unique(ies.da$model_group)
ies.da$model_group<- factor(ies.da$model_group, levels = "Tree-Based Models", "Other",             "Neural Networks")
typeof(ies.da$model_group)
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
ies.da$model_group
# weights and transformation
# Function to calculate various effect sizes and to estimate the variance
## for the traditional meta analysis
ies.da  <- escalc(xi = event , ni = total , data = my_data ,
measure = "PFT",  # FT double  arcsine  transformation
slab=paste(AuthorYear, " Estimate ", esid)
)
#the ies: individual effect size, new variables:
## yi: FTT effect sizes
## vi: calculated variances
ies.da$ancillary <- relevel(factor(ies.da$ancillary), ref = "Remote Sensing Only")
ies.da$indices <- relevel(factor(ies.da$indices), ref = "Not Used")
study_features <- c(
# 2 levels
# "ancillary",
# "indices","Confusion_matrix",
# 3 levels
"model_group", #"SDG_theme", "classification_type",
# "no_band_group", "RS_device_type",
#
# # 4 levels
# "RS_device_group", "RS_spatital_res_grouped",
# numeric
"Publication.Year", "total", "globalCitationsCount",
"number_classes", "fraction_majority_class"
)
ies.da$se <- sqrt(ies.da$vi)
multi_inf_out_numeric_anc <- multimodel.inference(TE = "yi",
seTE = "se",
method='REML',
test='t',
data = ies.da,
predictors = study_features,
interaction = FALSE,
seed=357)
study_map <- world_map |>
group_by(region) |>
labs(title = "Map of researched locations")
source("../appendix/packages.R")
source("../appendix/feature_labels.R")
# final dataset, for data wrangling see appendix
my_data <- read.csv("../data/analysis_df.csv")
# weights and transformation
# Function to calculate various effect sizes and to estimate the variance
## for the traditional meta analysis
ies.da  <- escalc(xi = event , ni = total , data = my_data ,
measure = "PFT",  # FT double  arcsine  transformation
slab=paste(AuthorYear, " Estimate ", esid)
)
#the ies: individual effect size, new variables:
## yi: FTT effect sizes
## vi: calculated variances
ies.da$ancillary <- relevel(factor(ies.da$ancillary), ref = "Remote Sensing Only")
ies.da$indices <- relevel(factor(ies.da$indices), ref = "Not Used")
#| fig-height: 2.8
#| fig-width: 5
#| label: fig-subfig-map
#| fig-cap-location: top
#| fig-cap: "change"
sf_world <- ne_countries(returnclass = "sf")
# Get the world map data with country names, latitude, and longitude
world_map <- map_data("world")
SDG_colours <-
scale_colour_manual(values = c(
"SDG2: Zero Hunger" = "#E8B700",
"SDG11: Sustainable Cities" = "#FF7518",
"SDG15: Life on Land" = "#2C9F2C"
))
study_map <- world_map |>
group_by(region) |>
summarize(lat = mean(lat), long = mean(long), .groups = 'drop')|>
right_join(my_data, join_by("region"=="location"))
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
#color = "#001158",
alpha = 0.4,
size = 1.2,
width = 3,
height = 1,
show.legend = FALSE) +
labs(title = "Map of researched locations")
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
#color = "#001158",
alpha = 0.4,
size = 1.2,
width = 3,
height = 1,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
View(my_data)
study_map <- world_map |>
group_by(region) |>
summarize(lat = mean(lat), long = mean(long), .groups = 'drop')|>
right_join(subset(my_data, esid ==1), join_by("region"=="location"))
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
#color = "#001158",
alpha = 0.4,
size = 1.2,
width = 3,
height = 1,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
size = 1.2,
width = 3,
height = 1,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
size = 1.2,
width = 3,
height = 2,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
size = 1.2,
width = 3,
height = 2,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
size = 1.2,
width = 3,
height = 0,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat, colour = SDG_theme),
size = 1.2,
width = 3,
height = -0.5,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
width = 3,
height = -0.5,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
width = 3,
height = 1,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
width = 3,
alpha = 0.8,
height = 1,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
width = 3,
alpha = 0.8,
height = -1,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
width = 4,
alpha = 0.8,
height = -1,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
#width = 4,
alpha = 0.8,
height = -1,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
ggplot(sf_world) +
geom_sf(fill = "#f4f3f1")+
coord_sf(ylim = c(-55,80)) +
geom_jitter(data = study_map, aes(x = long, y = lat,
colour = SDG_theme,
fill = SDG_theme),
size = 1.2,
#width = 4,
#alpha = 0.8,
height = -1,
shape = 25,
show.legend = FALSE) +
labs(title = "Map of researched locations")+
SDG_colours +
theme_void()
